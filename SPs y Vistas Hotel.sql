------------------------------------ SPs para CRUD de HOTEL_TAB

----INSERT
create or replace PROCEDURE SP_INSERT_HOTEL(
ID_DIRECCION_V NUMBER,
ID_HORARIO_V NUMBER,
NOMBRE_V NVARCHAR2,
TELEFONO_V NVARCHAR2,
CORREO_V NVARCHAR2
)
is 
begin

    INSERT INTO HOTEL_TB(ID_DIRECCION ,ID_HORARIO ,NOMBRE ,TELEFONO ,CORREO )
    VALUES (ID_DIRECCION_V ,ID_HORARIO_V ,NOMBRE_V ,TELEFONO_V ,CORREO_V);
    COMMIT;
end;
/
--EXECUTE SP_INSERT_HOTEL(1,1,1, 'NOMBRE', '123456789', 'NOMBRE@ejemplo.com');


----UPDATE
create or replace PROCEDURE SP_UPDATE_HOTEL(
ID_HOTEL_V NUMBER,
ID_DIRECCION_V NUMBER,
ID_HORARIO_V NUMBER,
NOMBRE_V NVARCHAR2,
TELEFONO_V NVARCHAR2,
CORREO_V NVARCHAR2
)
is 
begin
    UPDATE HOTEL_TB SET
    ID_DIRECCION  = ID_DIRECCION_V,
    ID_HORARIO = ID_HORARIO_V,
    NOMBRE = NOMBRE_V,
    TELEFONO = TELEFONO_V,
    CORREO = CORREO_V
    WHERE ID_HOTEL = ID_HOTEL_V;
    COMMIT;
end;

/
--EXECUTE SP_UPDATE_HOTEL(1,1,1, 'NOMBRE_UPD', '123456789', 'UPDATE@ejemplo.com');


----DELETE
create or replace PROCEDURE SP_DELETE_HOTEL(
ID_HOTEL_V NUMBER
)
is 
begin

    DELETE FROM HOTEL_TB
    WHERE ID_HOTEL = ID_HOTEL_V;
    
    COMMIT;
end;

--EXECUTE SP_DELETE_HOTEL(1);
/

------------------------------------ SPs para CRUD de DIRECCION_TB

----INSERT
create or replace PROCEDURE SP_INSERT_DIRECCION(
PROVINCIA_V NVARCHAR2,
CANTON_V NVARCHAR2,
DISTRITO_V NVARCHAR2,
DIRECCION_DETALLADA_V NVARCHAR2
)
is 
begin

    INSERT INTO DIRECCION_TB(PROVINCIA ,CANTON ,DISTRITO ,DIRECCION_DETALLADA )
    VALUES (PROVINCIA_V ,CANTON_V ,DISTRITO_V ,DIRECCION_DETALLADA_V);
    COMMIT;
end;
/
--EXECUTE SP_INSERT_DIRECCION('HEREDIA', 'SANTA BARBARA', 'SANTA BARBARA', 'DETRAS DE LA PARROQUIA 100 SUR');


----UPDATE
create or replace PROCEDURE SP_UPDATE_DIRECCION(
ID_DIRECCION_V NUMBER,
PROVINCIA_V NVARCHAR2,
CANTON_V NVARCHAR2,
DISTRITO_V NVARCHAR2,
DIRECCION_DETALLADA_V NVARCHAR2
)
is 
begin
    UPDATE DIRECCION_TB SET
    PROVINCIA = PROVINCIA_V,
    CANTON = CANTON_V,
    DISTRITO = DISTRITO_V,
    DIRECCION_DETALLADA = DIRECCION_DETALLADA_V
    WHERE ID_DIRECCION = ID_DIRECCION_V;
    COMMIT;
end;

/
--EXECUTE SP_UPDATE_DIRECCION('HEREDIA', 'SANTA BARBARA', 'SAN PEDRO', '500 NORTE DEL PARQUE');


----DELETE
create or replace PROCEDURE SP_DELETE_DIRECCION(
ID_DIRECCION_V NUMBER
)
is 
begin

    DELETE FROM DIRECCION_TB
    WHERE ID_DIRECCION = ID_DIRECCION_V;
    
    COMMIT;
end;

--EXECUTE SP_DELETE_DIRECCION(1);

/
------------------------------------ SPs para CRUD de SERVICIO_HOTEL_TAB

----INSERT
create or replace PROCEDURE SP_INSERT_SERVICIO_HOTEL(
ID_HOTEL_V NUMBER,
NOMBRE_V NVARCHAR2,
ESTADO_V NVARCHAR2
)
is 
begin

    INSERT INTO SERVICIO_HOTEL_TAB(ID_HOTEL ,NOMBRE ,ESTADO )
    VALUES (ID_HOTEL_V ,NOMBRE_V ,ESTADO_V);
    COMMIT;
end;
/
--EXECUTE SP_INSERT_SERVICIO_HOTEL(1, 'SERVICIO', 'ACTIVO');


----UPDATE
create or replace PROCEDURE SP_UPDATE_SERVICIO_HOTEL(
ID_SERVICIO_HOTEL_V NUMBER,
NOMBRE_V NVARCHAR2,
ESTADO_V NVARCHAR2
)
is 
begin
    UPDATE SERVICIO_HOTEL_TAB SET
    NOMBRE = NOMBRE_V,
    ESTADO = ESTADO_V
    WHERE ID_SERVICIO_HOTEL = ID_SERVICIO_HOTEL_V;
    COMMIT;
end;

/
--EXECUTE SP_UPDATE_SERVICIO_HOTEL(1, 'SERVICIO', 'INACTIVO');


----DELETE
create or replace PROCEDURE SP_DELETE_SERVICIO_HOTEL(
ID_SERVICIO_HOTEL_V NUMBER
)
is 
begin

    DELETE FROM SERVICIO_HOTEL_TAB
    WHERE ID_SERVICIO_HOTEL = ID_SERVICIO_HOTEL_V;
    
    COMMIT;
end;

--EXECUTE SP_DELETE_SERVICIO_HOTEL(1);
/


create or replace PROCEDURE OBTENER_HORARIOS(
    P_CURSOR OUT SYS_REFCURSOR
)
AS
BEGIN
    -- Abrir el cursor y seleccionar todos los registros de la tabla SERVICIO_TB
    OPEN P_CURSOR FOR
    SELECT ID_HORARIO, FECHA_HORARIO, HORA_APERTURA, HORA_CIERRE
    FROM HORARIO_TB;
END;

INSERT INTO DIRECCION_TB (ID_DIRECCION, PROVINCIA, CANTON, DISTRITO, DIRECCION_DETALLADA) VALUES (1, 'San José', 'Escazú', 'San Rafael', 'Centro Comercial Multiplaza');
INSERT INTO DIRECCION_TB (ID_DIRECCION, PROVINCIA, CANTON, DISTRITO, DIRECCION_DETALLADA) VALUES (2, 'Heredia', 'Belén', 'Asunción', 'Zona Franca América, Edificio 5');

--

--EXECUTE SP_DELETE_HOTEL(1);
/
CREATE OR REPLACE PROCEDURE OBTENER_HOTEL(
    RESULTADO OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN RESULTADO FOR
    SELECT ID_HOTEL,d.direccion_detallada,hr.fecha_horario,NOMBRE, TELEFONO, CORREO
    FROM HOTEL_TB h inner join direccion_tb d
    on h.id_direccion = d.id_direccion
    inner join horario_tb hr
    on h.id_horario = hr.id_horario;
END;
/

--
create or replace PROCEDURE OBTENER_HORARIO_POR_ID(
    P_ID_HORARIO IN HORARIO_TB.ID_HORARIO%TYPE, -- ID del horario que se desea consultar
    RESULTADO OUT SYS_REFCURSOR                 -- Cursor para devolver el resultado
)
AS
BEGIN
    -- Abrir un cursor con la consulta SELECT filtrada por ID_HORARIO
    OPEN RESULTADO FOR
    SELECT ID_HORARIO, FECHA_HORARIO, HORA_APERTURA, HORA_CIERRE
    FROM HORARIO_TB
    WHERE ID_HORARIO = P_ID_HORARIO;
END;
--

create or replace PROCEDURE OBTENER_DIRECCIONES(
    RESULTADO OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN RESULTADO FOR
    SELECT ID_DIRECCION,PROVINCIA, CANTON, DISTRITO,DIRECCION_DETALLADA
    FROM DIRECCION_TB;
END;

--
create or replace PROCEDURE OBTENER_DIRECCION_POR_ID(
    P_ID_DIRECCION IN DIRECCION_TB.ID_DIRECCION%TYPE, 
    RESULTADO OUT SYS_REFCURSOR        
)
AS
BEGIN
    OPEN RESULTADO FOR
    SELECT ID_DIRECCION,PROVINCIA, CANTON, DISTRITO,DIRECCION_DETALLADA
    FROM DIRECCION_TB
    WHERE ID_DIRECCION = P_ID_DIRECCION;
END;
---


-- 1. Ver el empleado y su puesto según el hotel en el que se encuentran
CREATE OR REPLACE VIEW VISTA_EMPLEADO_HOTEL AS
SELECT  H.NOMBRE AS HOTEL_NOMBRE, H.CORREO AS HOTEL_CORREO, 
P.NOMBRE || ' ' || P.PRIMER_APELLIDO || ' ' || P.SEGUNDO_APELLIDO AS NOMBRE_EMPLEADO,
   E.PUESTO AS EMPLEADO_PUESTO
FROM 
    EMPLEADO_TB E
INNER JOIN PERSONA_TB P 
    ON E.ID_PERSONA = P.ID_PERSONA
INNER JOIN HOTEL_TB H
    ON E.ID_HOTEL = H.ID_HOTEL
WHERE E.ESTADO = 'Activo';


/
SELECT * FROM VISTA_EMPLEADO_HOTEL;

/
--2. Mostrar la cantidad de empleados que hay en el hote en cada puesto
CREATE OR REPLACE VIEW VISTA_CANTIDAD_EMPLEADO AS
SELECT H.NOMBRE AS HOTEL_NOMBRE,E.PUESTO AS EMPLEADO_PUESTO,
    COUNT(E.ID_EMPLEADO) AS CANTIDAD_EMPLEADOS
FROM 
    EMPLEADO_TB E
INNER JOIN HOTEL_TB H ON E.ID_HOTEL = H.ID_HOTEL
GROUP BY 
    H.NOMBRE, E.PUESTO
ORDER BY 
    H.NOMBRE, E.PUESTO;
/
SELECT * FROM VISTA_CANTIDAD_EMPLEADO;

/
-- 3. Mostrar la venta por productos
CREATE OR REPLACE VIEW VISTA_HABITACION_OCUPACION AS
SELECT H.ID_HOTEL, H.ID_HABITACION, H.NUMERO_HABITACION,
    COUNT(R.ID_RESERVACION_HABITACION) AS CANTIDAD_OCUPACIONES
FROM 
    RESERVACION_HABITACION_TB R
INNER JOIN  HABITACION_TB H ON R.ID_HABITACION = H.ID_HABITACION
WHERE R.ID_HORARIO IN (
        SELECT ID_HORARIO
        FROM HORARIO_TB
        WHERE FECHA_HORARIO BETWEEN ADD_MONTHS(SYSDATE, -1) AND SYSDATE
    )
GROUP BY H.ID_HABITACION, H.NUMERO_HABITACION, H.ID_HOTEL
ORDER BY CANTIDAD_OCUPACIONES DESC;
/
SELECT * FROM VISTA_HABITACION_OCUPACION;
/

--Vista Servicios Hotel
CREATE OR REPLACE VIEW VISTA_SERVICIOS_HOTELES AS
SELECT 
    SERVICIO_HOTEL_TAB.ID_SERVICIO_HOTEL,
    SERVICIO_HOTEL_TAB.NOMBRE AS NOMBRE_SERVICIO,
    HOTEL_TB.NOMBRE AS NOMBRE_HOTEL,
    DIRECCION_TB.PROVINCIA,
    DIRECCION_TB.CANTON,
    DIRECCION_TB.DISTRITO,
    DIRECCION_TB.DIRECCION_DETALLADA
FROM 
    SERVICIO_HOTEL_TAB
JOIN 
    HOTEL_TB ON SERVICIO_HOTEL_TAB.ID_HOTEL = HOTEL_TB.ID_HOTEL
LEFT JOIN 
    DIRECCION_TB ON HOTEL_TB.ID_DIRECCION = DIRECCION_TB.ID_DIRECCION;

--Vista Servicios Habitaciones
CREATE OR REPLACE VIEW VISTA_SERVICIOS_MULTIPLES_HABITACIONES AS
SELECT 
    SERVICIO_MULTIPLE_TB.ID_SERVICIO_MULTIPLE,
    HABITACION_TB.NUMERO_HABITACION,
    HABITACION_TB.DESCRIPCION,
    HABITACION_TB.ESTADO_LIMPIEZA,
    HOTEL_TB.NOMBRE AS NOMBRE_HOTEL
FROM 
    SERVICIO_MULTIPLE_TB
JOIN 
    HABITACION_TB ON SERVICIO_MULTIPLE_TB.ID_HABITACION = HABITACION_TB.ID_HABITACION
JOIN 
    HOTEL_TB ON HABITACION_TB.ID_HOTEL = HOTEL_TB.ID_HOTEL;

--Vista Empleados Activos
CREATE OR REPLACE VIEW VISTA_EMPLEADOS_ACTIVOS AS
SELECT 
    EMPLEADO_TB.ID_EMPLEADO,
    PERSONA_TB.NOMBRE,
    PERSONA_TB.PRIMER_APELLIDO,
    PERSONA_TB.SEGUNDO_APELLIDO,
    PERSONA_TB.TELEFONO,
    PERSONA_TB.CORREO,
    EMPLEADO_TB.PUESTO,
    EMPLEADO_TB.SALARIO,
    EMPLEADO_TB.FECHA_INGRESO
FROM 
    EMPLEADO_TB
JOIN 
    PERSONA_TB ON EMPLEADO_TB.ID_PERSONA = PERSONA_TB.ID_PERSONA
WHERE 
    EMPLEADO_TB.ESTADO = 'Activo';




    
    
    
    
    
